## PACKAGES ##
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
library(readr)
library(stringr)
library(janitor)
library(tidyverse)
library(lubridate)
library(scales)
#library(khroma)
library(patchwork)
library(tools)
library(ggtext)
library(png)
library(ggpubr)
library(leaflet)

options(shiny.sanitize.errors = FALSE)

# UI ---------------------------------------------------------------------------

ui <- dashboardPage(
  skin = "black",
  dashboardHeader(
    title = tags$a(
      href = "https://mralph15.shinyapps.io/dashboard/",
      tags$img(src = "food_point_logo.png", height = "40", width = "180")
    )
  ),
  ## Create Sidebar Tabs
  dashboardSidebar(
    sidebarMenu(
      menuItem(
        "Overview",
        tabName = "overview", icon = icon("dashboard")
      ),
      menuItem(
        "Upload Instructions",
        tabName = "upload", icon = icon("copy")
      ),
      menuItem(
        "Spending Over Time",
        tabName = "future", icon = icon("chart-line")
      ),
      menuItem(
        "Dining Locations",
        tabName = "locations", icon = icon("map-marked")
      ),
      menuItem(
        "Top 5 Restaurants",
        tabName = "restaurants", icon = icon("utensils")
      ),
      menuItem(
        "Food Point Tips",
        tabName = "spendingtips", icon = icon("money-check-alt")
      ),
      menuItem(
        "Write Up",
        tabName = "writeup", icon = icon("pencil-alt")
      )
    )
  ),
  dashboardBody(
    tabItems(
      ## Upload Instructions Tab
      tabItem(
        tabName = "upload",
        h2("How to Access and Upload Your Food Points"),
        fluidRow(
          img(
            src = "food-points-instructions.png", height = 800, width = 700,
            style = "display: block; margin-left: auto; margin-right: auto;"
          ),
        )
      ),
      ## Food Points Overview Tab
      tabItem(
        tabName = "overview",
        h2("Food Points Overview"),
        p("First upload your data by going to the upload instructions tab!"),
        fluidRow(
          box(downloadButton("food_template", "Download Food Point Template"),
              h4(""),
              fileInput(
                "student_data",
                "Upload Your Food Point Usage:"
              ),
              height = 200,
              accept = ".csv"
          ),
          box(
            align = "center",
            infoBoxOutput(width = 12, "plan_detected"),
            tableOutput("summary_table"), height = 200
          )
        ),
        fluidRow(
          column(12,
                 align = "center", offset = 1,
                 box(
                   align = "center", width = 9,
                   DT::dataTableOutput("user_points_table")
                 )
          )
        ),
      ),
      ## Spending Over Time Tab
      tabItem(
        tabName = "future",
        h2("Spending Over Time"),
        fluidRow(
          box(
            selectInput("select_sem", "Select Semester:",
                        choices = c("Fall", "Spring")
            ),
            selectInput("select_plan", "Select a Food Plan:",
                        choices = c(
                          "Plan A", "Plan B", "Plan C", "Plan D",
                          "Plan F", "Plan I", "Plan J"
                        )
            ),
            checkboxInput(
              "negative_values",
              "Allow progression to display negative food points remaining?",
              value = FALSE
            ),
            height = 220, width = 4
          ),
          box(
            align = "center", h4(strong("Selected Plan Characteristics\n \n ")),
            tableOutput("plan_select_table"),
            height = 220, width = 4
          ),
          box(
            plotOutput("overtime_key"),
            height = 220, width = 4
          )
        ),
        fluidRow(
          box(
            plotOutput("overtime2")
          ),
          box(
            plotOutput("overtime1")
          )
        ),
      ),
      ## Dining Location Tabs
      tabItem(
        tabName = "locations",
        h2("Where Food Points Are Spent"),
        fluidRow(
          column(12,
                 align = "center", offset = 3,
                 box(
                   align = "center", width = 6,
                   uiOutput("location_date_range"),
                 )
          )
        ),
        fluidRow(
          column(12,
                 align = "center", offset = 1,
                 box(
                   align = "center", width = 10, height = 500,
                   h3(strong("Campus Dining Locations")),
                   leafletOutput("leafmap")
                 )
          )
        )
      ),
      ## Project Write-Up Tab
      tabItem(
        tabName = "writeup",
        h2("Project Write Up"),
        fluidPage(
          column(12,
          h3("Introducton"),
          p("How can Duke students better understand their food points usage?
          Every semester, Duke offers the same various food plans to meet the
          diverse needs of their undergraduate students. These customized plans
          are tailored specifically for upper-class, first-year and off-campus
          students, yet most students, regardless of their food plan, face the
          same issue — they always either run out of food points by the end of
          the semester, or have too many remaining. The dreaded feeling of
          bargaining for your friend’s spare food points is something many Duke
          students have felt at one point in time, and this is the motivation
          for a pertinent issue we would like to explore. With all the options
          Duke offers, why is it so hard to budget our food points, and what can
          help us understand our spending better? Although the purpose of this
          project is not to create a food-management tool, our goal is that by
          illustrating food point usage, students can better understand their
          own spending, and use the information to inform any personal spending
          goals they may develop. In order to alleviate the mental hurdles that
          come with deciding how much money we can spend on food, we have
          created a R Shiny dashboard app that uses a Duke student’s food plan
          and data from their DukeCard Account Transaction Report to generate a
          visual report on their spending. To do this we utilize Duke’s Fall
          2021 and Spring 2022 Food Points Usage Chart. This chart breaks down
          all 8 of Duke’s food plans and the suggested usage rate based on daily
          and weekly averages. This is used in combination with the information
          available in a student’s personal usage data, which includes the
          location food points were spent at — accessed through their",
            a('DukeCard eAccounts login',
              href = "https://dukecard.duke.edu/manage-your-dukecard"),
              "to provide a comprehensive report on their food spending. We consulted
          Duke Dining on the best way to extract food point data and they believe
          our method of copying and pasting is most efficient, rather than using
          an inaccessible API.  Following instructions on the dashboard, students
          copy and paste their personal eAccounts information into a provided
          Excel template, to be uploaded to the R Shiny app. The template includes
          the `Date/Time` (date and time purchase occurred), `Account Name`,
          `Card Number`, `Location` (restaurant purchase occurred at),
          `Transaction Type`, and `Amount` (cost of purchase) variables. Using
          the R Shiny dashboard, undergraduate students can generate a usage
          report from their online DukeCard statements."),
          p("The first dataset used to accomplish this goal, `semester.csv`,
            offers a brief summary of each plan, which allows us to quickly
            outline each plan’s offerings. Each observation is an offered Duke
            undergraduate food plan. The accompanying variables are information
            about the total number of points offered on the plan, the expected
            number of points to be spent per week, and the expected number of
            points to be spent per day. There are `r nrow(semester)` observations
            and `r ncol(semester)` variables in the data set. The data was
            collected from",
            a("Duke's Food Plan and Points Website",
              href = "https://studentaffairs.duke.edu/dining/plans-points"),
            ". The second dataset we use, `usage_chart.csv`, offers in depth
            recommended spending information for each plan, which provides the
            ability to track a user’s spending against the typical spending. Each
            observation is a week during a Duke undergraduate semester. The
            accompanying variables are information about the start date for the
            week in the Fall or Spring semester (see `fall` and `spring` variables),
            and the expected number of food points to start that week with,
            depending on which plan a student has. There are `r nrow(usage_chart)`
            observations and `r ncol(usage_chart)` variables in the data set.
            The data was collected from the Fall 2021 and Spring 2022 Food Points
            Calculators found on",
            a("Duke's Food Plan and Points Website",
              href = "https://studentaffairs.duke.edu/dining/plans-points"),
            ". A comprehensive code book for each data set can be found in the",
            a("GitHub repository",
              href = "https://github.com/vizdata-f21/project-2-out_of_the_boxplots"),
            ". Using the data from the user input
            template, the R Shiny app creates a tool involving visualizations and
            an overall report whose purpose is to provide students with the
            necessary insight on how much they can spend on food and where they
            should or shouldn’t spend their food, while staying within the
            limits of their food plan. The intended audience of undergraduate
            Duke students can use this app to inform their food point spending
            decision making, helping to accomplish any goals they may have set
            for themselves."),
          h4("Justification of Approach"),
          p("Students begin by uploading their filled-in template csv file
          containing a full account of their purchases made using food points
          over a selected semester. Users are instructed to visit the upload
          instructions tab for further guidance on how to do this. This step must
          be completed first in order to populate all subsequent visualizations
          and information on the generated report. However, once completed, users
          may navigate the tabs in whichever order they please such that they
          are most effectively able to accomplish their food point spending goals."),
          p("Once uploaded, the Shiny app displays which food plan the user has,
            the total points offered on their plan, their points spent thus far,
            and their points remaining for the semester. Below this information,
            users have access to a populated searchable data table with their
            relevant uploaded information."),
          p("Subsequently, students may move to the Spending Over Time tab, which
            allows the opportunity to select the semester and corresponding food plan
            users wish to have analyzed. Once selected, the application generates
            two plots. The first bar plot shows the student’s average spending each
            week. We include labels which compare the user’s average spending across
            weeks, compared to the suggested average weekly spend for a chosen plan
            — as found in Duke’s Food Point Usage Chart — over the selected semester.
            The purpose of this plot is to indicate whether or not a student is
            overspending, on average, and specifically identify the weeks where the
            overspending occurred. The second line plot projects if, and when, a
            student will run out of food points and is denoted by the line “Expected
            Progression.” To obtain our Expected Progression we made a linear
            regression model using the student's uploaded data which is denoted by
            the line “Actual Progression” to predict the student’s remaining food
            point balance week by week over the selected semester. The purpose of
            this plot is to give a generalized idea of a student’s spending habits
            and how their current spending will impact their remaining balance later
            in the semester. This is valuable insight because the plot shows exactly
            how much a student can stretch their food points without running out.
            This page’s functionality also allows users to see how their data compares
            to the recommended spending for alternative plans, which is useful when
            deciding on whether to switch food plans in future semesters.")
          )
        )
      ),
      ## Food Point Tips Tab
      tabItem(
        tabName = "spendingtips",
        h2("Food Point Spending Tips"),
        fluidRow(column(12,
                        align = "center", offset = 3,
                        box(
                          align = "center", width = 6,
                          selectInput("tips_options",
                                      "How Are You Doing With Your Food Points?",
                                      choices = c(
                                        "I'm Running Low!",
                                        "I Have Too Many Remaining!"
                                      )
                          )
                        )
        )),
        uiOutput("tips_needed")
      ),
      ## Top 5 Restaurants Tab
      tabItem(
        tabName = "restaurants",
        h2("Your Top 5 Restaurants"),
        fluidRow(
          column(12,
                 align = "center",
                 uiOutput("daterange2"),
          )
        ),
        fluidRow(
          column(12,
                 align = "center", offset = 1,
                 box(
                   align = "center", width = 10,
                   selectInput(
                     "top_5_input",
                     "Which Measure(s) Would You Like Visualized?",
                     c(
                       "All Three: Total Swipes, Total Spent, & Avg. Spent",
                       "Total Number of Swipes per Restaurant",
                       "Total Food Points Spent per Restaurant",
                       "Average Food Points Spent per Restaurant"
                     )
                   )
                 )
          )
        ),
        fluidRow(
          column(12,
                 align = "center",
                 wellPanel(plotOutput("plot_top_5"))
          )
        ),
        fluidRow(
          column(12,
                 align = "center", offset = 2,
                 box(
                   align = "center", width = 8,
                   DT::dataTableOutput("food_points_all_info_table")
                 )
          )
        )
      )
    )
  )
)